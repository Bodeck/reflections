What happens when you initialize a repository? Why do you need to do it?
Git creates directory with respository metadata .git. It need to be done to initialize tracking changes in repository.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It is stage between working area and repository, we add there files which should be next commited. 

How can you use the staging area to make sure you have one commit per logical change?
Place on stage on file which should be commited even if I change different files in working area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Alternative solution, experimental features. We can independly develop and make changes in original version. 

How do the diagrams help you visualize the branch structure?
List all commints in branches, so I can compare which commit is is oldest and which branch is parent.

What is the results of merging two branches together? Why do we need represent it in the diagram they we do?
Label of branch is removed and all commits copied to another branch. Merged branch is not deleted.
To see and compere commits in two branches.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
Pros
	More effective and less time consuming
	It ok were there are no conflicts or conflicts can be resolve by git itself
Cons
	We have no control on conflicts let's say there are two features which can cause logic errors during program runtime.