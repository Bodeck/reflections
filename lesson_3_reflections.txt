When would you want to use a remote repository rather than keeping all your work local?
In case I want to publish/share most up to date version of master branch.
Also when I do not have access to local repo I can clone it from public - off course if it is up to date.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
This gives me full control on my local repository, so I do not pull unwanted changes/commits.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
clone: is copy of existing repository (remote or local). Commits done in local clone can be pushed origin repository.
branch: Branches are part of the same repository. Can be merged back into one branch.
forks: similar of tho clone are copy of original repository, but can be done only on GitHub

What is the benefit of having a copy of the last known state of the remote stored locally?
This helps git to sync local and remote repositories (this is how git know if local is ahead or behind local) 
and solve conflicts.
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
It would easier without staging, commiting, push and pulling changes. However solving conflicts and control what was changed
would be a nightmare.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When I need to work on experimental feature and want to touch master branch, when master branch contains production version of application.
This way I am sure I do not affect working product, also can pull latest version of master in case any changes were published by someone else.
From other hand if any change was made to files I am working on I need to pull updates, merge to my branch, resolve possible conflicts which 
require more work than simple pull from remote master to local master.
